# version: "3"
services:

  app:
    image: happy:dedoc
    container_name: happy_container
    ports:
      - 5000:5000
    depends_on:
      - postgre
    volumes:
      - .:/app
      - ..:/app/prj
    # deploy:
    #   resources:
    #     reservations:
    #       devices:
    #         - driver: nvidia
    #           count: 1
    #           capabilities: [gpu]
    command: ['python', 'app.py']


  postgre:
    image: happy_db
    container_name: postgres_container
    environment:
      POSTGRES_USER: happy_user
      POSTGRES_PASSWORD: happy
      POSTGRES_DB: happy_db
    ports:
      - 5432:5432
    expose:
      - 5432
    volumes:
      - ./happy_pgdata:/var/lib/postgresql/data


  loader:
    image: happy:dedoc
    container_name: loader_container
    depends_on:
      - postgre
    ports:
      - 8888:8888
    expose:
      - 8888
    volumes:
      - ..:/app
    # deploy:
    #   resources:
    #     reservations:
    #       devices:
    #         - driver: nvidia
    #           count: 1
    #           capabilities: [gpu]
    command: tail -F /dev/null
    # command: ['python', './NER_System/run.py']
    # command: ["python", './Happy/Utility/Loader/run_loader.py']


  corrector:
    image: corrector
    container_name: spell_checker_container
    depends_on:
      - postgre
    volumes:
      - ..:/task
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
    command: tail -F /dev/null


  summarizer:
    image: happy:dedoc
    container_name: summarizer_container
    depends_on:
      - postgre
    volumes:
      - ..:/app
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
    command: tail -F /dev/null


  ocr:
    image: olm_ocr
    container_name: ocr_container
    volumes:
      - ..:/ocr
    command: tail -F /dev/null


volumes:
  pgdata:
    driver: local

networks:
  default:
    name: postgre-service_default
